<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_Matrix_Test" Id="{54635403-dd01-0e43-181c-428b6dbc359d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Matrix_Test EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[WhenDeclaredExpectNoMemoryAllocated();
WhenInitiallyResizedExpectMemoryAllocated();
WhenResizedBiggerExpectMoreMemoryAllocated();
WhenResizedSmallerExpectLessMemoryAllocated();
WhenResizedToZeroExpectNoMemoryAllocated();]]></ST>
    </Implementation>
    <Folder Name="Access" Id="{6e13e87e-8a9a-048e-3a8c-43fa554b38ad}" />
    <Folder Name="Resize" Id="{bfa23fd9-95bb-0df9-1e4f-a4e0bf87e25f}" />
    <Method Name="WhenDeclaredExpectNoMemoryAllocated" Id="{e76f40f2-9e5f-0e70-0e41-efbd9edc0c41}" FolderPath="Resize\">
      <Declaration><![CDATA[METHOD PRIVATE WhenDeclaredExpectNoMemoryAllocated
VAR_INPUT
END_VAR
VAR
	M : Matrix;
	
	ExpectedBufferSize : ULINT := 0;
	ExpectedBufferCount : ULINT := 0;
	
	ActualBufferSize : ULINT;
	ActualBufferCount : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('WhenDeclaredExpectNoMemoryAllocated');

// @TEST-RUN
ActualBufferSize := M.MemManager.nAllocatedSize;
ActualBufferCount := M.MemManager.nBufferCount;

// @TEST-ASSERT
AssertEquals(Expected := ExpectedBufferSize,
	Actual := ActualBufferSize,
	Message := 'Matrix buffer size not correct');
AssertEquals(Expected := ExpectedBufferCount,
	Actual := ActualBufferCount,
	Message := 'Matrix buffer count not correct');
	
TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhenInitiallyResizedExpectMemoryAllocated" Id="{e070b58a-7b2e-00c9-236c-e1d4bd9dab24}" FolderPath="Resize\">
      <Declaration><![CDATA[METHOD PRIVATE WhenInitiallyResizedExpectMemoryAllocated
VAR_INPUT
END_VAR

VAR
	M : Matrix;
	ResizeSuccess : BOOL;
	
	ExpectedBufferSize : ULINT := 1*SIZEOF(LREAL) + SIZEOF(ULINT);
	ExpectedBufferCount : ULINT := 1;
	
	ActualBufferSize : ULINT;
	ActualBufferCount : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('WhenInitiallyResizedExpectMemoryAllocated');

// @TEST-RUN
ResizeSuccess := M.Resize(1,1,FALSE,TRUE);

ActualBufferSize := M.MemManager.nAllocatedSize;
ActualBufferCount := M.MemManager.nBufferCount;


// @TEST-ASSERT
AssertTrue(Condition :=ResizeSuccess,
	message := 'Error on valid initial resize');
AssertEquals(Expected := ExpectedBufferSize,
	Actual := ActualBufferSize,
	Message := 'Matrix buffer size not correct');
AssertEquals(Expected := ExpectedBufferCount,
	Actual := ActualBufferCount,
	Message := 'Matrix buffer count not correct');
	
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhenResizedBiggerExpectMoreMemoryAllocated" Id="{4c144e27-cde9-06d8-2c10-1905086e448a}" FolderPath="Resize\">
      <Declaration><![CDATA[METHOD PRIVATE WhenResizedBiggerExpectMoreMemoryAllocated
VAR_INPUT
END_VAR
VAR
	M : Matrix;
	InitialResizeSuccess : BOOL;
	SecondResizeSuccess : BOOL;
	
	ExpectedBufferSize : ULINT := 4*SIZEOF(LREAL) + SIZEOF(ULINT);
	ExpectedBufferCount : ULINT := 1;
	
	ActualBufferSize : ULINT;
	ActualBufferCount : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('WhenResizedBiggerExpectMoreMemoryAllocated');

// @TEST-RUN
InitialResizeSuccess := M.Resize(1,1,FALSE,TRUE);
SecondResizeSuccess := M.Resize(2,2,FALSE,TRUE);

ActualBufferSize := M.MemManager.nAllocatedSize;
ActualBufferCount := M.MemManager.nBufferCount;

// @TEST-ASSERT
AssertTrue(Condition :=InitialResizeSuccess,
	message := 'Error on valid initial resize');
AssertTrue(Condition :=SecondResizeSuccess,
	message := 'Error on valid second resize');
AssertEquals(Expected := ExpectedBufferSize,
	Actual := ActualBufferSize,
	Message := 'Matrix buffer size not correct');
AssertEquals(Expected := ExpectedBufferCount,
	Actual := ActualBufferCount,
	Message := 'Matrix buffer count not correct');
	
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhenResizedSmallerExpectLessMemoryAllocated" Id="{f15ddc13-ce40-0f57-1947-8a0c4169fc8b}" FolderPath="Resize\">
      <Declaration><![CDATA[METHOD PRIVATE WhenResizedSmallerExpectLessMemoryAllocated
VAR_INPUT
END_VAR
VAR
	M : Matrix;
	InitialResizeSuccess : BOOL;
	SecondResizeSuccess : BOOL;
	
	ExpectedBufferSize : ULINT := 1*SIZEOF(LREAL) + SIZEOF(ULINT);
	ExpectedBufferCount : ULINT := 1;
	
	ActualBufferSize : ULINT;
	ActualBufferCount : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('WhenResizedSmallerExpectLessMemoryAllocated');

// @TEST-RUN
InitialResizeSuccess := M.Resize(2,2,FALSE,TRUE);
SecondResizeSuccess := M.Resize(1,1,FALSE,TRUE);

ActualBufferSize := M.MemManager.nAllocatedSize;
ActualBufferCount := M.MemManager.nBufferCount;

// @TEST-ASSERT
AssertTrue(Condition :=InitialResizeSuccess,
	message := 'Error on valid initial resize');
AssertTrue(Condition :=SecondResizeSuccess,
	message := 'Error on valid second resize');
AssertEquals(Expected := ExpectedBufferSize,
	Actual := ActualBufferSize,
	Message := 'Matrix buffer size not correct');
AssertEquals(Expected := ExpectedBufferCount,
	Actual := ActualBufferCount,
	Message := 'Matrix buffer count not correct');
	
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="WhenResizedToZeroExpectNoMemoryAllocated" Id="{44d4a43d-fd60-056f-2d77-91c9b8831470}" FolderPath="Resize\">
      <Declaration><![CDATA[METHOD PRIVATE WhenResizedToZeroExpectNoMemoryAllocated
VAR_INPUT
END_VAR
VAR
	M : Matrix;
	InitialResizeSuccess : BOOL;
	SecondResizeSuccess : BOOL;
	
	ExpectedBufferSize : ULINT := 0;
	ExpectedBufferCount : ULINT := 0;
	
	ActualBufferSize : ULINT;
	ActualBufferCount : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('WhenResizedToZeroExpectNoMemoryAllocated');

// @TEST-RUN
InitialResizeSuccess := M.Resize(1,1,FALSE,TRUE);
SecondResizeSuccess := M.Resize(0,0,FALSE,TRUE);

ActualBufferSize := M.MemManager.nAllocatedSize;
ActualBufferCount := M.MemManager.nBufferCount;

// @TEST-ASSERT
AssertTrue(Condition :=InitialResizeSuccess,
	message := 'Error on valid initial resize');
AssertTrue(Condition :=SecondResizeSuccess,
	message := 'Error on valid second resize');
AssertEquals(Expected := ExpectedBufferSize,
	Actual := ActualBufferSize,
	Message := 'Matrix buffer size not correct');
AssertEquals(Expected := ExpectedBufferCount,
	Actual := ActualBufferCount,
	Message := 'Matrix buffer count not correct');
	
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Matrix_Test">
      <LineId Id="9" Count="4" />
    </LineIds>
    <LineIds Name="FB_Matrix_Test.WhenDeclaredExpectNoMemoryAllocated">
      <LineId Id="5" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="156" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_Matrix_Test.WhenInitiallyResizedExpectMemoryAllocated">
      <LineId Id="6" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="50" Count="3" />
      <LineId Id="8" Count="4" />
      <LineId Id="55" Count="4" />
      <LineId Id="40" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Matrix_Test.WhenResizedBiggerExpectMoreMemoryAllocated">
      <LineId Id="157" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="187" Count="3" />
      <LineId Id="160" Count="3" />
      <LineId Id="174" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="192" Count="4" />
      <LineId Id="177" Count="1" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_Matrix_Test.WhenResizedSmallerExpectLessMemoryAllocated">
      <LineId Id="163" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="196" Count="3" />
      <LineId Id="166" Count="5" />
      <LineId Id="201" Count="4" />
      <LineId Id="186" Count="1" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_Matrix_Test.WhenResizedToZeroExpectNoMemoryAllocated">
      <LineId Id="163" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="203" Count="3" />
      <LineId Id="166" Count="5" />
      <LineId Id="208" Count="4" />
      <LineId Id="51" Count="0" />
      <LineId Id="193" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>